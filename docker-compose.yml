services:
  postgres:
    image: postgres:14
    container_name: orders_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders_user -d orders_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: orders_rabbitmq
    restart: unless-stopped
    hostname: rabbitmq-orders
    environment:
      RABBITMQ_DEFAULT_USER: orders_user
      RABBITMQ_DEFAULT_PASS: orders_pass
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  default:
    name: orders_network